/*
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * ModelMetadata
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-04-12T16:52:07.017866+02:00[Europe/Paris]")
public class ModelMetadata {
  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_VERSION = "version";
  @SerializedName(SERIALIZED_NAME_VERSION)
  private String version;

  public static final String SERIALIZED_NAME_FORMAT = "format";
  @SerializedName(SERIALIZED_NAME_FORMAT)
  private String format;

  public static final String SERIALIZED_NAME_AUTHOR = "author";
  @SerializedName(SERIALIZED_NAME_AUTHOR)
  private String author;

  public static final String SERIALIZED_NAME_METRICS = "metrics";
  @SerializedName(SERIALIZED_NAME_METRICS)
  private Map<String, String> metrics = null;

  public static final String SERIALIZED_NAME_CUSTOM_PROPERTIES = "customProperties";
  @SerializedName(SERIALIZED_NAME_CUSTOM_PROPERTIES)
  private Map<String, String> customProperties = null;


  public ModelMetadata name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Name of the model
   * @return name
  **/
  @ApiModelProperty(required = true, value = "Name of the model")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public ModelMetadata version(String version) {
    
    this.version = version;
    return this;
  }

   /**
   * Version of the model
   * @return version
  **/
  @ApiModelProperty(required = true, value = "Version of the model")

  public String getVersion() {
    return version;
  }


  public void setVersion(String version) {
    this.version = version;
  }


  public ModelMetadata format(String format) {
    
    this.format = format;
    return this;
  }

   /**
   * Format of the model
   * @return format
  **/
  @ApiModelProperty(required = true, value = "Format of the model")

  public String getFormat() {
    return format;
  }


  public void setFormat(String format) {
    this.format = format;
  }


  public ModelMetadata author(String author) {
    
    this.author = author;
    return this;
  }

   /**
   * Author of the model
   * @return author
  **/
  @ApiModelProperty(required = true, value = "Author of the model")

  public String getAuthor() {
    return author;
  }


  public void setAuthor(String author) {
    this.author = author;
  }


  public ModelMetadata metrics(Map<String, String> metrics) {
    
    this.metrics = metrics;
    return this;
  }

  public ModelMetadata putMetricsItem(String key, String metricsItem) {
    if (this.metrics == null) {
      this.metrics = new HashMap<String, String>();
    }
    this.metrics.put(key, metricsItem);
    return this;
  }

   /**
   * Get metrics
   * @return metrics
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, String> getMetrics() {
    return metrics;
  }


  public void setMetrics(Map<String, String> metrics) {
    this.metrics = metrics;
  }


  public ModelMetadata customProperties(Map<String, String> customProperties) {
    
    this.customProperties = customProperties;
    return this;
  }

  public ModelMetadata putCustomPropertiesItem(String key, String customPropertiesItem) {
    if (this.customProperties == null) {
      this.customProperties = new HashMap<String, String>();
    }
    this.customProperties.put(key, customPropertiesItem);
    return this;
  }

   /**
   * Get customProperties
   * @return customProperties
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, String> getCustomProperties() {
    return customProperties;
  }


  public void setCustomProperties(Map<String, String> customProperties) {
    this.customProperties = customProperties;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModelMetadata modelMetadata = (ModelMetadata) o;
    return Objects.equals(this.name, modelMetadata.name) &&
        Objects.equals(this.version, modelMetadata.version) &&
        Objects.equals(this.format, modelMetadata.format) &&
        Objects.equals(this.author, modelMetadata.author) &&
        Objects.equals(this.metrics, modelMetadata.metrics) &&
        Objects.equals(this.customProperties, modelMetadata.customProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, version, format, author, metrics, customProperties);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModelMetadata {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    format: ").append(toIndentedString(format)).append("\n");
    sb.append("    author: ").append(toIndentedString(author)).append("\n");
    sb.append("    metrics: ").append(toIndentedString(metrics)).append("\n");
    sb.append("    customProperties: ").append(toIndentedString(customProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

